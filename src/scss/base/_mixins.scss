//Los mixxins son una nueva forma de manejar media querys desde scss, son como funciones. Con estas funciones se busca reutilizar líneas de código y volverlas a utilizar a lo largo del programa. A estas funciones pueden ser más especificas, se le pueden atribuir parámetros (Puede añadirse un valor por defecto) haciendo que la función, pueda reemplazar estos según sea conveniente. Es configurable y se puede acomodar a distintos casos. Inclusive puede tener if.

// @mixin heading(color: black, $b: false) {
//     text-transform: uppercase;
//     font-size: 2.4rem;
//     color: $color;
//     letter-spacing: 1px;
//     @if $bg {
//     background-color: red;
//     }
// }

//Se importa la clase de variables
@use 'variables' as v;

@mixin heading($color: black, $border-radius: false) {
  text-transform: uppercase;
  font-size: 2.4rem;
  color: $color;
  letter-spacing: 1px;
  background-color: black;

  @if $border-radius {
    border-radius: 1rem;
  }
}

//Para el teléfono
@mixin phone {
  @media (min-width: v.$phone) {
    //Cuando se especifica content, significa que el código interno de este mixin se agrega externamente
    @content;
  }
}

//Para la tablet
@mixin tablet {
  @media (min-width: v.$tablet) {
    @content;
  }
}

//Para la computadora de tamaño medio
@mixin desktop {
  @media (min-width: v.$desktop) {
    @content;
  }
}

//Para la computadora de tamaño largo
@mixin desktopLarge {
  @media (min-width: v.$desktopLarge) {
    @content;
  }
}

//Definiendo un grid
@mixin grid($columns, $gap) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

//Que la lista no tenga un formato específico
@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}